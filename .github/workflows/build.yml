name: Build Mac, Linux, Windows

on: 
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build-mac-linux: 
    name: Build ${{ matrix.os }} ${{ matrix.arch }}
    strategy:
      matrix:
        os: [ubuntu, macos]
        arch: [x86_64] # , aarch64

    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install packages on Linux (native non-docker build)
        run: sudo apt-get update -y && sudo apt-get install -y nasm libgtk-3-dev
        if: matrix.os == 'ubuntu' && matrix.arch == 'x86_64'

      - name: Prepare deploy dirs
        run: |
          mkdir -p build deploy

      # Will only build Intel artifacts for now since GHA still does not have support for Apple Silicon:
      # https://github.com/actions/virtual-environments/issues/2187
      - name: Copy deploy artifacts if running on OSX
        run: |
               cd build && cmake .. && make && cd ..
               cp build/mac/tests/openpnp-capture-test deploy/openpnp-capture-test-${{ matrix.os }}-${{ matrix.arch }}
               cp build/libopenpnp-capture.dylib deploy/libopenpnp-capture-${{ matrix.os }}-${{ matrix.arch }}.dylib
        if: matrix.os == 'macos' && matrix.arch == 'x86_64'

      - name: Copy deploy artifacts if running for x86_64 on Linux
        run: |
               cd build && cmake .. && make && cd ..
               cp build/linux/tests/openpnp-capture-test deploy/openpnp-capture-test-${{ matrix.os }}-${{ matrix.arch }}
               cp build/libopenpnp-capture.so deploy/libopenpnp-capture-${{ matrix.os }}-${{ matrix.arch }}.so
        if: matrix.os == 'ubuntu' && matrix.arch == 'x86_64'

      - name: Cross compile artifacts for aarch64/arm64 if running on Linux
        uses: uraimo/run-on-arch-action@v2.0.10
        with:
          arch: aarch64 # No dockerfile for x86_64 on https://github.com/uraimo/run-on-arch-action/tree/master/Dockerfiles
          distro: ubuntu20.04 # Different from matrix.os on GHA: https://github.com/marketplace/actions/run-on-architecture#supported-platforms
          dockerRunArgs: |
            --volume "${PWD}/build:/build"
            --volume "${PWD}/deploy:/deploy"

          run: |
                 apt-get update -y && apt-get install -y cmake make nasm libgtk-3-dev build-essential # install same packages as above within the cross-compiling container
                 cd build && cmake .. && make && cd ..
                 cp /build/linux/tests/openpnp-capture-test /deploy/openpnp-capture-test-${{ matrix.os }}-${{ matrix.arch }}
                 cp /build/libopenpnp-capture.so /deploy/libopenpnp-capture-${{ matrix.os }}-${{ matrix.arch }}.so
        if: matrix.os == 'ubuntu' && matrix.arch == 'aarch64'

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with: 
          name: ${{ matrix.os }}_${{ matrix.arch }}
          path: |
            deploy/*.so
            deploy/*.dylib

#      - name: Create Release
#        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
#        uses: ncipollo/release-action@v1
#        with:
#            artifacts: "deploy/*"
#            token: ${{ secrets.GITHUB_TOKEN }}
#            allowUpdates: true

  build-windows: 
    name: Build ${{ matrix.os }} ${{ matrix.arch }}
    strategy:
      matrix:
        os: [windows]
        build_type: [Release]
        arch: [x64]

    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup MSbuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Build
        run: |
                mkdir build
                cd build
                cmake -G "Visual Studio 17 2022" -A x64 ..
                msbuild ALL_BUILD.vcxproj /property:Configuration=Release

      - name: Upload Artifacts 
        uses: actions/upload-artifact@v3
        with: 
          name: ${{ matrix.os }}_x64
          path: |
            build/Release/*.dll

#      - name: Create Release
#         if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
#         uses: ncipollo/release-action@v1
#         with:
#             artifacts: "build/${{ matrix.build_type }}/*"
#             token: ${{ secrets.GITHUB_TOKEN }}
#             allowUpdates: true

  build-nuget:
    name: Build Nuget package
    needs: [build-mac-linux, build-windows]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup .NET 6
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.x'
          source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.x'
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          path: build/
      - name: Show downloaded
        run: |
          tree build
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          useConfigFile: true
      - name: Pack
        run: nuget pack openpnp-capture.native.nuspec -Version ${{ steps.gitversion.outputs.majorMinorPatch }}.${{ github.run_number }}
      - name: Upload Artifacts 
        uses: actions/upload-artifact@v3
        with: 
          name: nupkg
          path: |
            **/*.nupkg
      #- name: Push
      #  run: dotnet nuget push **/*.nupkg --api-key ${{ secrets.GITHUB_TOKEN }}